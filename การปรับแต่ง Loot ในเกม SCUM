# การปรับแต่ง Loot ในเกม SCUM

## 1. Introduction

เอกสารนี้อธิบายเกี่ยวกับคุณสมบัติการปรับแต่ง loot ในเกม SCUM การปรับแต่ง loot ทำผ่านการสร้างและการแก้ไขไฟล์ JSON ต่างๆ ความรู้พื้นฐานเกี่ยวกับ JSON เป็นสิ่งจำเป็น หากคุณไม่เคยได้ยินเกี่ยวกับ JSON หรือจำเป็นต้องทบทวนความรู้ นี่คือลิงก์ที่มีประโยชน์:
- [JSON](https://en.wikipedia.org/wiki/JSON)
- [W3Schools JSON Intro](https://www.w3schools.com/js/js_json_intro.asp)
- [JSON.org](https://www.json.org/)

ไฟล์ JSON ที่เกี่ยวข้องกับ loot ส่วนใหญ่สามารถส่งออกจากเกมได้ผ่านคำสั่งแอดมินต่างๆ ขณะที่บางไฟล์ต้องสร้างขึ้นเอง เส้นทางหลักที่พบไฟล์ JSON คือ:
- เซิร์ฟเวอร์มัลติเพลเยอร์: `<Server>\SCUM\Saved\Config\WindowsServer\Loot`
- โหมดผู้เล่นคนเดียว: `%LocalAppData%\SCUM\Saved\Config\WindowsNoEditor\Loot`

ไฟล์ JSON จะถูกโหลดเมื่อเริ่มเกม และการเปลี่ยนแปลงใดๆ สามารถโหลดใหม่ได้ผ่านคำสั่ง `#ReloadLootCustomizationsAndResetSpawners` เพื่อทดสอบการปรับเปลี่ยนได้อย่างรวดเร็ว คำสั่งนี้จะถูกอธิบายรายละเอียดในภายหลัง รวมถึงกระบวนการส่งออก สร้าง และแก้ไขไฟล์ JSON ที่เกี่ยวข้องกับ loot

ก่อนที่จะเข้าสู่คำสั่งและการปรับแต่ง loot เราจะครอบคลุมแนวคิดและคุณสมบัติพื้นฐานที่จำเป็นสำหรับการปรับแต่ง loot อย่างมีประสิทธิภาพ

หากคุณต้องการเริ่มต้นทันที ไปที่ส่วนการส่งออก

## 2. Rarity

ความหายากถูกใช้ตลอดการปรับแต่ง loot โดยมันกำหนดความน่าจะเป็นในการเลือกวัตถุจากชุดของวัตถุ วัตถุเป็นคำที่เป็นนามธรรมและสามารถหมายถึงอะไรก็ได้ คุณสามารถคิดว่าวัตถุเป็นไอเท็มชั่วคราว แต่ละวัตถุในชุดจะได้รับการกำหนดความหายากซึ่งสามารถเป็นค่าดังต่อไปนี้:
- Abundant: มีโอกาสถูกเลือก 32 เท่าของ Extremely Rare
- Common: มีโอกาสถูกเลือก 16 เท่าของ Extremely Rare
- Uncommon: มีโอกาสถูกเลือก 8 เท่าของ Extremely Rare
- Rare: มีโอกาสถูกเลือก 4 เท่าของ Extremely Rare
- Very Rare: มีโอกาสถูกเลือก 2 เท่าของ Extremely Rare
- Extremely Rare: มีโอกาสถูกเลือกเท่ากับวัตถุ Extremely Rare อื่นๆ ในชุด

ยกตัวอย่างเช่น ชุดของวัตถุดังต่อไปนี้ (วัตถุในตัวอย่างนี้คือไอเท็ม):
{ Apple (Abundant), Banana (Common), Lemon (Uncommon), Kiwi (Rare), Mango (Very Rare), Watermelon (Extremely Rare) }

แอปเปิ้ลมีโอกาสถูกเลือกมากกว่ากล้วย 2 เท่า มากกว่าเลม่อน 4 เท่า มากกว่ากีวี 8 เท่า มากกว่าแมงโก้ 16 เท่า และมากกว่าสตรอเบอรี่ 32 เท่า ในทางกลับกัน กล้วยมีโอกาสถูกเลือกน้อยกว่าแอปเปิ้ล 2 เท่า มากกว่าเลม่อน 2 เท่า มากกว่ากีวี 4 เท่า มากกว่าแมงโก้ 8 เท่า และมากกว่าสตรอเบอรี่ 16 เท่า การเลือกวัตถุอื่นๆ เมื่อเปรียบเทียบกับผลไม้อื่นๆ สามารถอนุมานได้ในลักษณะเดียวกัน

อีกวิธีหนึ่งในการมองความหายากคือผ่านรูเล็ตที่พื้นที่ที่ครอบครองโดยวัตถุกำหนดความน่าจะเป็นในการถูกเลือก สำหรับตัวอย่างข้างต้น รูเล็ตจะดูดังนี้:

![รูเล็ต](https://example.com/roulette_image)

ตามที่เห็น แอปเปิ้ลครอบครองพื้นที่มากที่สุด ดังนั้นมันมีโอกาสถูกเลือกมากที่สุด ตรงกันข้ามกับแตงโมที่ครอบครองพื้นที่น้อยที่สุด ดังนั้นมันมีโอกาสถูกเลือกน้อยที่สุด ผลไม้อื่นๆ อยู่ระหว่างนั้น

มาดูตัวอย่างอีกครั้ง:
{ Apple|Common, Banana|Common, Lemon|Rare, Watermelon|Very Rare }

ครั้งนี้ ความหายากบางอย่าง "หายไป" และเรามีผลไม้สองชนิดที่มีความหายากเดียวกัน วัตถุที่มีความหายากเดียวกันจะถูกจัดกลุ่มเข้าด้วยกัน เพื่อกำหนดวัตถุที่ถูกเลือกในกลุ่ม จะมีการทอยลูกเต๋าอีกหนึ่งครั้งโดยมีโอกาสเท่ากันสำหรับวัตถุทั้งหมดที่มีความหายากเดียวกัน มาดูรูเล็ตสำหรับตัวอย่างข้างต้น:

![รูเล็ต](https://example.com/roulette_example)

ในกรณีนี้ แอปเปิ้ลหรือกล้วยมีโอกาสถูกเลือกมากกว่าเลม่อน 4 เท่า และมากกว่าสตรอเบอรี่ 8 เท่า ในรูเล็ตข้างต้น แอปเปิ้ลหรือกล้วยจะถูกเลือกก่อน จากนั้นลูกเต๋าจะถูกทอยอีกครั้งเพื่อเลือกแอปเปิ้ลหรือกล้วย แต่ละอย่างมีโอกาสถูกเลือก 50%

การรู้วิธีการเลือกวัตถุโดยใช้ความหายากเป็นสิ่งสำคัญ เพราะมันถูกใช้ตลอดเอกสารที่เหลือสำหรับการเลือกไอเท็ม การเลือกโหนด และการเลือกซับพรีเซ็ต ไม่ต้องกังวลถ้าคุณไม่รู้ว่าโหนดและซับพรีเซ็ตหมายถึงอะไร พวกมันจะถูกอธิบายในส่วนถัดไป

## 3. Loot Tree Nodes

### ภาพรวม

ก่อนที่จะอธิบายว่าโหนดต้นไม้ loot คืออะไร มาครอบคลุมแรงจูงใจสำหรับพวกมันกันเถอะ สมมติว่าเรามีบาร์ที่สามารถเกิดไอเท็มดังต่อไปนี้:
- Beer
- Absinthe
- Chips
- Hazelnuts
- 1H_KitchenKnife

เราต้องกำหนดความน่าจะเป็นให้กับไอเท็มเพราะมันไม่มีเหตุผลที่ Hazelnuts จะมีโอกาสเกิดเท่ากับ Beer อย่างน้อยก็ไม่ใช่ในบาร์ เรามีความหายากที่ระบุความน่าจะเป็นอยู่แล้ว ดังนั้นลองทำดู:
- Beer (Abundant)
- Absinthe (Very Rare)
- Chips (Uncommon)
- Hazelnuts (Rare)
- 1H_KitchenKnife (Extremely Rare)

ปัญหาของวิธีนี้คือความน่าจะเป็นเหล่านี้มีเหตุผลในบาร์ แต่จะไม่มีเหตุผลที่อื่น ตัวอย่างเช่น หากเราต้องการเกิดไอเท็มในครัวเรือน 1H_KitchenKnife จะมีโอกาสมากกว่า Hazelnuts หรือ Absinthe นอกจากนี้ หากเรากำลังจัดการกับไอเท็มจำนวนมาก ความหายากจะไม่เพียงพอที่จะแยกแยะ หนึ่งในวิธีแก้ไขคือการใช้ตัวเลขสำหรับความน่าจะเป็นแทนความหายาก แต่สิ่งนี้อาจยุ่งยากในการปรับแต่งและการบำรุงรักษา

เราแก้ไขปัญหานี้โดยการจัดหมวดหมู่ไอเท็มและความหายากของพวกมันในรูปต้นไม้ โหนดต้นไม้แต่ละโหนดมีชื่อและความหายาก โหนดแม่หมายถึงกระเป๋าของไอเท็มที่มีลักษณะร่วมกันบางประการ ตัวอย่างเช่น โหนดแม่อาจเป็นบาร์ที่มีไอเท็มที่มีเหตุผลในบาร์ นอกจากนี้ โหนดบาร์อาจมีถุงอื่นๆ เช่น เครื่องดื่ม อาหาร และอาวุธ ซึ่งจะมีไอเท็มที่มีเหตุผลสำหรับถุงเหล่านั้น มาจัดไอเท็ม 5 อย่างข้างต้นในรูปต้นไม้:
- Bar
  - Drinks
    - Beer
    - Absinthe
  - Food
    - Chips
    - Hazelnuts
  - Weapons
    - 1H_KitchenKnife

ดังนั้น ขั้นตอนแรกคือการจัดระเบียบไอเท็มในรูปต้นไม้ ขั้นตอนต่อไปคือการกำหนดความหายาก ความหายากของแต่ละโหนดเป็นสัมพัทธ์กับความหายากของโหนดพี่น้องอื่นๆ เนื่องจากนี่เป็นบาร์ เครื่องดื่มควรพบมากกว่าอาหารและพบมากกว่าอาวุธมาก นอกจากนี้ เบียร์ควรพบมากกว่า absinthe และชิปควรพบมากกว่าเฮเซลนัท เราสามารถกำหนดความหายากได้ดังนี้:
- Bar
  - Drinks (Abundant)
    - Beer (Abundant)
    - Absinthe (Rare)
  - Food (Uncommon)
    - Chips (Abundant)
    - Hazelnuts (Common)
  - Weapons (Very Rare)
    - 1H_KitchenKnife

### 4. JSON Specification

นี่คือโค้ด JSON สำหรับต้นไม้ loot ข้างต้น:
```json
{
	"Name": "Bar",
	"Children": [
		{
			"Name": "Drinks",
			"Rarity": "Abundant",
			"Children": [
				{
					"Name": "Beer",
					"Rarity": "Abundant"
				},
				{
					"Name": "Absinthe",
					"Rarity": "Rare"
				}
			]
		},
		{
			"Name": "Food",
			"Rarity": "Uncommon",
			"Children": [
				{
					"Name": "Chips",
					"Rarity": "Abundant"
				},
				{
					"Name": "Hazelnuts",
					"Rarity": "Common"
				}
			]
		},
		{
			"Name": "Weapons",
			"Rarity": "Very Rare",
			"Children": [
				{
					"Name": "1H_KitchenKnife"
				}
			]
		}
	]
}
